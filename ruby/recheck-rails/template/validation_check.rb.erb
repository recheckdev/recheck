require_relative '<%= "../" * depth %>recheck_helper'

class <%= class_name %>ValidationChecker < Recheck::Checker::Base
  <%= class_name %>.validators.each_with_index do |validator, index|
    puts "validator #{validator} i #{index}"
    attrs = validator.attributes

    case validator
    when ActiveRecord::Validations::AbsenceValidator
    when ActiveRecord::Validations::AssociatedValidator
    when ActiveRecord::Validations::LengthValidator
    when ActiveRecord::Validations::NumericalityValidator
    when ActiveRecord::Validations::PresenceValidator
      define_method("query_presence_#{index}_#{attrs.join('_')}") do
        q = attrs.map { |attr|
          <%= class_name %>.where(attr => nil)
        }.inject(<%= class_name %>.none) { |query, attr_query| query.or(attr_query) }
        puts q.to_sql
        q
      end
    when ActiveRecord::Validations::UniquenessValidator
    end
  end

  def check_validator_passes(_)
    false
  end
end
